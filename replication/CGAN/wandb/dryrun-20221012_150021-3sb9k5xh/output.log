Traceback (most recent call last):
  File "main.py", line 352, in <module>
    main()
  File "main.py", line 297, in main
    model.train(train_data, config, val_func=val_model)
  File "/home/jupyter/papers/regressGAN/replication/CGAN/models/cgan.py", line 125, in train
    data_logits = self.disc(torch.cat((x_batch, data_batch), dim=1))
  File "/home/jupyter/papers/regressGAN/replication/CGAN/venv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/jupyter/papers/regressGAN/replication/CGAN/models/networks.py", line 71, in forward
    other_repr = self.activation(layer(other_repr))
  File "/home/jupyter/papers/regressGAN/replication/CGAN/venv/lib/python3.7/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/jupyter/papers/regressGAN/replication/CGAN/venv/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 87, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/jupyter/papers/regressGAN/replication/CGAN/venv/lib/python3.7/site-packages/torch/nn/functional.py", line 1370, in linear
    ret = torch.addmm(bias, input, weight.t())
RuntimeError: size mismatch, m1: [100 x 41], m2: [1 x 64] at /pytorch/aten/src/THC/generic/THCTensorMathBlas.cu:290
